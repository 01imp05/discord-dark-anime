$enable-rounded: true;
@mixin border-radius($radius...) {
    @if $enable-rounded {
      border-radius: $radius;
    }
  }
  
  @mixin border-top-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: $radius;
      border-top-right-radius: $radius;
    }
  }
  
  @mixin border-right-radius($radius) {
    @if $enable-rounded {
      border-top-right-radius: $radius;
      border-bottom-right-radius: $radius;
    }
  }
  
  @mixin border-bottom-radius($radius) {
    @if $enable-rounded {
      border-bottom-right-radius: $radius;
      border-bottom-left-radius: $radius;
    }
  }
  
  @mixin border-left-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: $radius;
      border-bottom-left-radius: $radius;
    }
  }
  
  @mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
      @content;
    }
    @-moz-keyframes #{$animation-name} {
      @content;
    }
    @-ms-keyframes #{$animation-name} {
      @content;
    }
    @-o-keyframes #{$animation-name} {
      @content;
    }
    @keyframes #{$animation-name} {
      @content;
    }
  }
  @mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
    @font-face {
      font-family: quote($font-name);
      src: url($file-name+".eot");
      src: url($file-name+".eot?#iefix") format("embedded-opentype"), url($file-name+".woff") format("woff"),
        url($file-name+".ttf") format("truetype"), url($file-name+".svg##{$font-name}") format("svg");
      font-weight: $weight;
      font-style: $style;
    }
  }
  
  @mixin animation($str...) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
  }
  
  @mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
  }
  
  @mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
  }
  // generic transform
  @mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
  }
  // rotate
  @mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
  }
  @mixin shadow($level) {
    @if $level == 0 {
      -webkit-box-shadow: initial;
      box-shadow: initial;
    } @else if $level == 1 {
      -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    } @else if $level == 2 {
      -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    } @else if $level == 3 {
      -webkit-box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    } @else if $level == 4 {
      -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    } @else if $level == 5 {
      -webkit-box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
      box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
    }
  }
  @mixin truncateText($overflow: ellipsis) {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: $overflow; // values are: clip, ellipsis, or a string
  }
  @mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    box-shadow: $shadow;
  }